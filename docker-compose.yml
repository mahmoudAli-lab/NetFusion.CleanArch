version: "3.9"

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: netfusion-sql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Your_password123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - mssql_data:/var/opt/mssql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: netfusion-rabbit
    ports:
      - "5672:5672"
      - "15672:15672" # management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: src/NetFusion.Api/Dockerfile
    container_name: netfusion-api
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      # picked up by Infrastructure.AddInfrastructure()
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NetFusionDb;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8080:8080"
    # optional: wait until DB ready at network level before starting Kestrel
    restart: unless-stopped

volumes:
  mssql_data:
